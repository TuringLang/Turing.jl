name: Tests

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:
    types: [checks_requested]

# Cancel existing tests on the same PR if a new commit is added to a pull request
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    # Use matrix.test.name here to avoid it taking up the entire window width
    name: test ${{matrix.test.name}} (${{ matrix.runner.version }}, ${{ matrix.runner.os }}, ${{ matrix.runner.num_threads }})
    runs-on: ${{ matrix.runner.os }}
    continue-on-error: ${{ matrix.runner.version == 'pre' }}

    strategy:
      fail-fast: false
      matrix:
        test:
          # Run some of the slower test files individually. The last one catches everything
          # not included in the others.
          - name: "mcmc/gibbs"
            args: "mcmc/gibbs.jl"
          - name: "mcmc/Inference"
            args: "mcmc/Inference.jl"
          - name: "ad"
            args: "ad.jl"
          - name: "everything else"
            args: "--skip mcmc/gibbs.jl mcmc/Inference.jl ad.jl"
        runner:
          # TODO(mhauru) All the ones below that run on 1.11 should actually be run on 1.
          # The last one, the one that currently only runs on 1, should be deleted.
          # The current setup is a temporary arrangement to deal with issues where Mooncake
          # and Libtask are broken on 1.12.
          # Default
          - version: '1.11'
            os: ubuntu-latest
            num_threads: 1
          # Multithreaded
          - version: '1.11'
            os: ubuntu-latest
            num_threads: 2
          # Windows
          - version: '1.11'
            os: windows-latest
            num_threads: 1
          # macOS
          - version: '1.11'
            os: macos-latest
            num_threads: 1
          # Minimum supported Julia version
          - version: 'min'
            os: ubuntu-latest
            num_threads: 1
          # Minimum supported Julia version, multithreaded
          - version: 'min'
            os: ubuntu-latest
            num_threads: 2
          # Pre-release Julia version
          - version: 'pre'
            os: ubuntu-latest
            num_threads: 1
          # TODO(mhauru) See comment at the top of this block: The below should eventually be removed.
          - version: '1'
            os: ubuntu-latest
            num_threads: 2

    steps:
      - name: Print matrix variables

        run: |
          echo "OS: ${{ matrix.runner.os }}"
          echo "Julia version: ${{ matrix.runner.version }}"
          echo "Number of threads: ${{ matrix.runner.num_threads }}"
          echo "Test arguments: ${{ matrix.test.args }}"

      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: '${{ matrix.runner.version }}'

      - uses: julia-actions/cache@v2

      - uses: julia-actions/julia-buildpkg@v1

      - uses: julia-actions/julia-runtest@v1
        with:
          test_args: ${{ matrix.test.args }}
        env:
          JULIA_NUM_THREADS: ${{ matrix.runner.num_threads }}

      - uses: julia-actions/julia-processcoverage@v1

      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
